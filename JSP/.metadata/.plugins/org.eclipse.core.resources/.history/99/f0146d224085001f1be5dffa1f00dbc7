package net.fullstack7.bbs;

import java.sql.*;
import java.time.LocalDateTime;
import java.util.*;
import net.fullstack7.common.DBConnPool;

public class BbsDAO extends DBConnPool {

    public BbsDAO() {
        super();  // 부모 클래스의 DBConnPool 생성자 호출
    }

    // 페이징 처리된 게시물 목록 가져오기
    public List<BbsDTO> getBbsListWithPaging(int currentPage, int pageSize) {
        List<BbsDTO> bbsList = new ArrayList<>();
        String sql = "SELECT title, TB.memberId, MB.name, content, TB.regDate, readCnt "
                   + "FROM tbl_bbs AS TB "
                   + "INNER JOIN tbl_member AS MB ON TB.memberId = MB.memberId "
                   + "ORDER BY TB.idx DESC "
                   + "LIMIT ? OFFSET ?";

        // try-with-resources를 사용해 자동으로 리소스를 해제
        try (
            Connection conn = this.getConnection();  // 커넥션 풀에서 커넥션을 가져옴
            PreparedStatement psmt = conn.prepareStatement(sql)
        ) {
            // LIMIT과 OFFSET 설정
            psmt.setInt(1, pageSize);
            psmt.setInt(2, (currentPage - 1) * pageSize);

            try (ResultSet rs = psmt.executeQuery()) {
                while (rs.next()) {
                    BbsDTO bDto = new BbsDTO();
                    bDto.setTitle(rs.getString(1));
                    bDto.setMemberId(rs.getString(2));
                    bDto.setName(rs.getString(3));
                    bDto.setContent(rs.getString(4));
                    bDto.setRegDate(rs.getObject("regDate", LocalDateTime.class));
                    bDto.setReadCnt(rs.getInt(6));
                    bbsList.add(bDto);
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
            System.out.println("게시판 조회에 실패하였습니다.");
        }

        return bbsList;
    }

    // 전체 게시물 개수 가져오기
    public int totalBbsCount() {
        String sql = "SELECT COUNT(*) FROM tbl_bbs";
        int totalCnt = 0;

        // try-with-resources를 사용해 자동으로 리소스를 해제
        try (
            Connection conn = this.getConnection();  // 커넥션 풀에서 커넥션을 가져옴
            PreparedStatement psmt = conn.prepareStatement(sql);
            ResultSet rs = psmt.executeQuery()
        ) {
            if (rs.next()) {
                totalCnt = rs.getInt(1);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            System.out.println("게시물 개수 불러오기 실패");
        }

        System.out.println(totalCnt);
        return totalCnt;
    }
}
