<div id="comments-list">
    {{#commentsDtos}}
        <div class="card m-2" id="comment-{{id}}">
            <div class="card-header">
                {{nickname}}
                <!-- Button trigger modal -->
                <button type="button"
                        class="btn btn-sm btn-outline-primary"
                        data-bs-toggle="modal"
                        data-bs-target="#comment-edit-modal"
                        data-bs-id="{{id}}"
                        data-bs-nickname="{{nickname}}"
                        data-bs-body="{{body}}"
                        data-bs-article-id="{{articleId}}">
                    수정
               </button>
                <button type="button"
                        class="btn btn-sm btn-outline-danger comment-delete-btn"
                        data-comment-id="{{id}}">
                    삭제
                </button>

            </div>
            <div class="card-body">
                {{body}}
            </div>
        </div>
    {{/commentsDtos}}
</div>

<!-- Modal -->
<div class="modal fade" id="comment-edit-modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">댓글 수정</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
<!--                댓글 수정 폼-->
                <form>
<!--                    닉네임입력-->
                    <div class="mb-3">
                        <label class="form-label">닉네임</label>
                        <input type="text" class="form-control" id="edit-comment-nickname"/>
                    </div>
<!--                    댓글 본문 입력-->
                    <div class="mb-3">
                        <label class="form-label">댓글 내용</label>
                        <textarea type="text" class="form-control" id="edit-comment-body">
                </textarea>
                    </div>
                    {{#article}}
                        <input type="hidden" id="edit-comment-id">
                        <input type="hidden" id="edit-comment-article-id">
                    {{/article}}
                    <button type="submit" class="btn btn-primary"
                            id="comment-update-btn">수정 완료</button>
                </form>
            </div>

        </div>
    </div>
</div>
<script>
{
    //모달 요소 선택
    const commentEditModal = document.querySelector("#comment-edit-modal");
    //모달 이벤트 감지
    commentEditModal.addEventListener("show.bs.modal", function(event) {
        //1.트리거 버튼 선택
        const triggerBtn = event.relatedTarget;
        //2.데이터 가져오기
        const id = triggerBtn.getAttribute("data-bs-id");
        const articleId = triggerBtn.getAttribute("data-bs-article-id");
        const nickname = triggerBtn.getAttribute("data-bs-nickname");
        const body = triggerBtn.getAttribute("data-bs-body");
        //3.수정 폼에 데이터 반영
        document.querySelector("#edit-comment-nickname").value = nickname;
        document.querySelector("#edit-comment-body").value = body;
        document.querySelector("#edit-comment-article-id").value = articleId;
        document.querySelector("#edit-comment-id").value = id;

    });
}
{
    //수정 완료 버튼 선택
    const commentUpdateBtn = document.querySelector("#comment-update-btn");
    //클릭 이벤트 처리
    commentUpdateBtn.addEventListener("click", (e) => {
        const comment = {
            id : document.querySelector("#edit-comment-id").value,
            article_id : document.querySelector("#edit-comment-article-id").value,
            nickname : document.querySelector("#edit-comment-nickname").value,
            body : document.querySelector("#edit-comment-body").value
        }
        e.preventDefault();
        console.log(comment);
        //수정 REST API 호출
        const url = "/api/comments/" + comment.id;

        fetch(url, {
            method : "PATCH",
            headers : {
                "Content-Type" : "application/json"
            },
            body : JSON.stringify(comment) // comment 객체를 json 문자열로 전송
        }).then(response => {
            //HTTP응답 코드에 따른 메시지 출력
            const msg = (response.ok) ? "댓글이 수정됐습니다." : "댓글 수정 실패!";
            alert(msg);
            //현재 페이지 새로고침
            window.location.reload();
        });

    });

}
</script>
<!--댓글삭제-->
<script>
    //삭제 버튼 선택
    const commentDeleteBtns = document.querySelectorAll(".comment-delete-btn");

    commentDeleteBtns.forEach(btn => {
        btn.addEventListener("click", (e) => {
            const DeleteBtn = e.target;
            const commentId = DeleteBtn.getAttribute("data-comment-id");
            console.log(`${commentId}삭제 버튼이 클릭되었습니다.`);

            const url = `/api/comments/${commentId}`;

            fetch(url, {
                method:"DELETE"
            }).then(response => {
            if(!response.ok) {
                alert("댓글 삭제 실패!");
                return;
            }

            const msg = `${commentId}번 댓글 삭제 완료`;
            alert(msg);
            window.location.reload();
            });
        });

    })

</script>